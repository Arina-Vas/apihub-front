import type { Nullable } from "@/common"
import type { Playlist } from "@/features/playlists/api/playlistsApi.types.ts"
import { type SubmitHandler, type UseFormHandleSubmit, type UseFormRegister } from "react-hook-form"
import type { UpdateTrackArgs } from "../../../../api/tracksApi.types.ts"

type Props = {
  editTrack: () => void
  register: UseFormRegister<UpdateTrackArgs>
  handleSubmit: UseFormHandleSubmit<UpdateTrackArgs>
  onSubmit: SubmitHandler<UpdateTrackArgs>
  playlists: Playlist[]
  playlistId: Nullable<string>
  setPlaylistId: (playlistId: Nullable<string>) => void
}

export const EditTrackForm = ({
  editTrack,
  register,
  handleSubmit,
  onSubmit,
  playlists,
  setPlaylistId,
  playlistId,
}: Props) => {
  return (
    <form onSubmit={handleSubmit(onSubmit)}>
      <h2>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–µ–∫</h2>
      <div>
        <input {...register("title")} placeholder="Title" />
      </div>
      <div>
        <input {...register("lyrics")} placeholder="Lyrics" />
      </div>

      {/*TODO: –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ–ª–µ–∫—Ç–∞ —Å AddTrackForm. –ü—Ä–µ–∂–¥–µ —á–µ–º –ø–∏—Å–∞—Ç—å –æ–±–µ—Ä—Ç–∫—É –æ–±—Å—É–¥–∏—Ç—å –±–µ–∫–µ–Ω–¥*/}
      <div>
        <label>
          –í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–µ–π–ª–∏—Å—Ç:
          <select onChange={(e) => setPlaylistId(e.target.value)} value={playlistId ?? ""}>
            <option value="" disabled>
              -- –í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–µ–π–ª–∏—Å—Ç --
            </option>
            {playlists.map((playlist) => (
              <option key={playlist.id} value={playlist.id}>
                {playlist.attributes.title}
              </option>
            ))}
          </select>
          ü§î –ö–∞–∫ –ø–æ–Ω—è—Ç—å –≤ –∫–∞–∫–æ–º –ø–ª–µ–π–ª–∏—Å—Ç–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ç—Ä–µ–∫, —Ö–∑ )
        </label>
      </div>

      <button type={"submit"}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
      <button type={"button"} onClick={editTrack}>
        –û—Ç–º–µ–Ω–∞
      </button>
    </form>
  )
}
